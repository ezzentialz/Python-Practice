#*‡∏™‡∏£‡πâ‡∏≤‡∏á list ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß 2 ‡∏à‡∏≤‡∏Å list ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
#nums = [3, 6, 9, 12]
# Expected: [6, 12, 18, 24]
nums = [3, 6, 9, 12]
new_nums = [x * 2 for x in nums]
print(new_nums)

#üß™ ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 2: Filter Short Words
#‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 4 ‡∏ï‡∏±‡∏ß
#words = ['cat', 'tiger', 'lion', 'ant', 'elephant']
# Expected: ['cat', 'lion', 'ant']
words = ['cat', 'tiger', 'lion', 'ant', 'elephant']
sort_word = [list(filter(lambda w :len(w) <= 4 ,words))]
print(sort_word)


#üß™ ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 3: Squared Odds
#‡∏™‡∏£‡πâ‡∏≤‡∏á list ‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏≠‡∏á ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 1-10
# Expected: [1, 9, 25, 49, 81]

double_numbers = [x **2 for x in range(1 , 10+1) if x % 2 !=0]
print(double_numbers)

#üß™ ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 4: First Letters
#‡πÅ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡πÉ‡∏ô list ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô list ‡πÉ‡∏´‡∏°‡πà
#words = ['python', 'java', 'c++', 'rust']
# Expected: ['p', 'j', 'c', 'r']

words = ['python', 'java', 'c++', 'rust']
first_word = [w[0] for w in words]
print(first_word)


#üß™ ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 5: Clean Numbers
#‡∏à‡∏≤‡∏Å list ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞ string ‡πÉ‡∏´‡πâ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô int ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏ß‡∏°‡πÉ‡∏ô list ‡πÉ‡∏´‡∏°‡πà
#items = ['10', 20, '30', 40, 'fifty', 60]
# Expected: [10, 20, 30, 40, 60]
#„Éí„É≥„Éà: ‡πÉ‡∏ä‡πâ isinstance(x, int) ‡∏Å‡∏±‡∏ö x.isdigit() ‡∏ä‡πà‡∏ß‡∏¢‡πÑ‡∏î‡πâ üòâ

#‡∏≠‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö 
items = ['10', 20, '30', 40, 'fifty', 60]
new_items = [int(x) for x in items if isinstance(x, int) or isinstance(x, str) and x.isdigit()]
print(new_items)


#üß™ ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 1: Multiply by 3
#*‡∏™‡∏£‡πâ‡∏≤‡∏á list ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß 3 ‡∏à‡∏≤‡∏Å list ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
#nums = [2, 5, 7, 11]
# Expected: [6, 15, 21, 33]

nums = [2, 5, 7, 11]
new_nums = [x * 3 for x in nums]
print(new_nums)


#üß™ ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 2: Filter Short Words
#‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5 ‡∏ï‡∏±‡∏ß
#words = ['dog', 'eagle', 'lion', 'rabbit', 'bat']
# Expected: ['dog', 'lion', 'bat']
words = ['dog', 'eagle', 'lion', 'rabbit', 'bat']
short = [w for w in words if len(w) <5]
print(short)

#üß™ ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 3: Squared Odds
#‡∏™‡∏£‡πâ‡∏≤‡∏á list ‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏≠‡∏á ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 10-20
# Expected: [121, 169, 225, 289, 361, 441]
squared_oods = [x**2 for x in range(10, 20+1) if x % 2 !=0]
print(squared_oods)

#üß™ ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 4: First Letters
#‡πÅ‡∏¢‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡πÉ‡∏ô list ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô list ‡πÉ‡∏´‡∏°‡πà
#words = ['grape', 'melon', 'date', 'kiwi']
# Expected: ['g', 'm', 'd', 'k']
words = ['grape', 'melon', 'date', 'kiwi']
first_letter = [w[0] for w in words]
print(first_letter)

#üß™ ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 5: Clean Numbers
#‡∏à‡∏≤‡∏Å list ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞ string ‡πÉ‡∏´‡πâ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô int ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏ß‡∏°‡πÉ‡∏ô list ‡πÉ‡∏´‡∏°‡πà
#items = ['25', 15, '60', 'hello', 90, '35']
# Expected: [25, 15, 60, 90, 35]
items = ['25', 15, '60', 'hello', 90, '35']
clean_number = [int(x) for x in items if isinstance(x,int) or (isinstance(x,str)) and x.isdigit()]
print(clean_number)